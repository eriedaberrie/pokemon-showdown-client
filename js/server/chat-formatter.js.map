{"version":3,"sources":["../../data/pokemon-showdown/server/chat-formatter.ts"],"names":["linkRegex","TextFormatter","str","isTrusted","replaceLinebreaks","buffers","stack","offset","replace","uri","fulluri","test","substr","startsWith","slice","slashIndex","lastIndexOf","length","start","end","at","charAt","pushSpan","spanType","pushSlice","push","closeParenSpan","stackPosition","i","span","popSpan","closeSpan","pop","startIndex","tagName","attrs","popAllSpans","toUriComponent","html","component","encodeURIComponent","runLookahead","delimLength","curDelimLength","char","innerStart","innerEnd","colonPos","anglePos","termEnd","encodeURI","term","shortUri","key","toLowerCase","display","dir","toID","roomid","get","beginningOfLine","includes","join","formatText","stripFormatting","match","$1","$2","$3","$4","$5","$6"],"mappings":"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","sourcesContent":["/**\r\n * Chat parser\r\n * Pokemon Showdown - http://pokemonshowdown.com/\r\n *\r\n * Parses formate.\r\n *\r\n * @license MIT\r\n */\r\n\r\n/*\r\nREGEXFREE SOURCE FOR LINKREGEX\r\n\r\n\t(\r\n\t\t(\r\n\t\t\t# When using http://, allow any domain\r\n\t\t\thttps?:\\/\\/ [a-z0-9-]+ ( \\. [a-z0-9-]+ )*\r\n\t\t|\r\n\t\t\t# When using www., expect at least one more dot\r\n\t\t\twww \\. [a-z0-9-]+ ( \\. [a-z0-9-]+ )+\r\n\t\t|\r\n\t\t\t# Otherwise, allow any domain, but only if\r\n\t\t\t\\b [a-z0-9-]+ ( \\. [a-z0-9-]+ )* \\.\r\n\t\t\t(\r\n\t\t\t\t# followed either a common TLD...\r\n\t\t\t\tcom? | org | net | edu | info | us | jp\r\n\t\t\t|\r\n\t\t\t\t# or any 2-3 letter TLD followed by a port or /\r\n\t\t\t\t[a-z]{2,3} (?= :[0-9] | / )\r\n\t\t\t)\r\n\t\t)\r\n\t\t# possible custom port\r\n\t\t( : [0-9]+ )?\r\n\t\t(\r\n\t\t\t\\/\r\n\t\t\t(\r\n\t\t\t\t# characters allowed inside URL paths\r\n\t\t\t\t(\r\n\t\t\t\t\t[^\\s()&<>] | &amp; | &quot;\r\n\t\t\t\t|\r\n\t\t\t\t\t# parentheses in URLs should be matched, so they're not confused\r\n\t\t\t\t\t# for parentheses around URLs\r\n\t\t\t\t\t\\( ( [^\\\\s()<>&] | &amp; )* \\)\r\n\t\t\t\t)*\r\n\t\t\t\t# URLs usually don't end with punctuation, so don't allow\r\n\t\t\t\t# punctuation symbols that probably arent related to URL.\r\n\t\t\t\t(\r\n\t\t\t\t\t[^\\s()[\\]{}\\\".,!?;:&<>*`^~\\\\]\r\n\t\t\t\t|\r\n\t\t\t\t\t# annoyingly, Wikipedia URLs often end in )\r\n\t\t\t\t\t\\( ( [^\\s()<>&] | &amp; )* \\)\r\n\t\t\t\t)\r\n\t\t\t)?\r\n\t\t)?\r\n\t|\r\n\t\t# email address\r\n\t\t[a-z0-9.]+ @ [a-z0-9-]+ ( \\. [a-z0-9-]+ )* \\. [a-z]{2,}\r\n\t)\r\n\t(?! [^ ]*&gt; )\r\n\r\n*/\r\nexport const linkRegex = /(?:(?:https?:\\/\\/[a-z0-9-]+(?:\\.[a-z0-9-]+)*|www\\.[a-z0-9-]+(?:\\.[a-z0-9-]+)+|\\b[a-z0-9-]+(?:\\.[a-z0-9-]+)*\\.(?:com?|org|net|edu|info|us|jp|[a-z]{2,3}(?=:[0-9]|\\/)))(?::[0-9]+)?(?:\\/(?:(?:[^\\s()&<>]|&amp;|&quot;|\\((?:[^\\\\s()<>&]|&amp;)*\\))*(?:[^\\s()[\\]{}\".,!?;:&<>*`^~\\\\]|\\((?:[^\\s()<>&]|&amp;)*\\)))?)?|[a-z0-9.]+@[a-z0-9-]+(?:\\.[a-z0-9-]+)*\\.[a-z]{2,})(?![^ ]*&gt;)/ig;\r\n\r\ntype SpanType = '_' | '*' | '~' | '^' | '\\\\' | '|' | '<' | '[' | '`' | 'a' | 'spoiler' | '>' | '(';\r\n\r\ntype FormatSpan = [SpanType, number];\r\n\r\nclass TextFormatter {\r\n\treadonly str: string;\r\n\treadonly buffers: string[];\r\n\treadonly stack: FormatSpan[];\r\n\treadonly isTrusted: boolean;\r\n\treadonly replaceLinebreaks: boolean;\r\n\t/** offset of str that's been parsed so far */\r\n\toffset: number;\r\n\r\n\tconstructor(str: string, isTrusted = false, replaceLinebreaks = false) {\r\n\t\t// escapeHTML, without escaping /\r\n\t\tstr = `${str}`\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;')\r\n\t\t\t.replace(/'/g, '&apos;');\r\n\r\n\t\t// filter links first\r\n\t\tstr = str.replace(linkRegex, uri => {\r\n\t\t\tlet fulluri;\r\n\t\t\tif (/^[a-z0-9.]+@/ig.test(uri)) {\r\n\t\t\t\tfulluri = 'mailto:' + uri;\r\n\t\t\t} else {\r\n\t\t\t\tfulluri = uri.replace(/^([a-z]*[^a-z:])/g, 'http://$1');\r\n\t\t\t\tif (uri.substr(0, 24) === 'https://docs.google.com/' || uri.substr(0, 16) === 'docs.google.com/') {\r\n\t\t\t\t\tif (uri.startsWith('https')) uri = uri.slice(8);\r\n\t\t\t\t\tif (uri.substr(-12) === '?usp=sharing' || uri.substr(-12) === '&usp=sharing') uri = uri.slice(0, -12);\r\n\t\t\t\t\tif (uri.substr(-6) === '#gid=0') uri = uri.slice(0, -6);\r\n\t\t\t\t\tlet slashIndex = uri.lastIndexOf('/');\r\n\t\t\t\t\tif (uri.length - slashIndex > 18) slashIndex = uri.length;\r\n\t\t\t\t\tif (slashIndex - 4 > 19 + 3) {\r\n\t\t\t\t\t\turi = uri.slice(0, 19) +\r\n\t\t\t\t\t\t'<small class=\"message-overflow\">' + uri.slice(19, slashIndex - 4) + '</small>' + uri.slice(slashIndex - 4);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn `<a href=\"${fulluri}\" rel=\"noopener\" target=\"_blank\">${uri}</a>`;\r\n\t\t});\r\n\t\t// (links don't have any specific syntax, they're just a pattern, so we detect them in a separate pass)\r\n\r\n\t\tthis.str = str;\r\n\t\tthis.buffers = [];\r\n\t\tthis.stack = [];\r\n\t\tthis.isTrusted = isTrusted;\r\n\t\tthis.replaceLinebreaks = this.isTrusted || replaceLinebreaks;\r\n\t\tthis.offset = 0;\r\n\t}\r\n\t// debugAt(i=0, j=i+1) { console.log(`${this.slice(0, i)}[${this.slice(i, j)}]${this.slice(j, this.str.length)}`); }\r\n\r\n\tslice(start: number, end: number) {\r\n\t\treturn this.str.slice(start, end);\r\n\t}\r\n\r\n\tat(start: number) {\r\n\t\treturn this.str.charAt(start);\r\n\t}\r\n\r\n\tpushSpan(spanType: SpanType, start: number, end: number) {\r\n\t\tthis.pushSlice(start);\r\n\t\tthis.stack.push([spanType, this.buffers.length]);\r\n\t\tthis.buffers.push(this.slice(start, end));\r\n\t\tthis.offset = end;\r\n\t}\r\n\r\n\tpushSlice(end: number) {\r\n\t\tif (end !== this.offset) {\r\n\t\t\tthis.buffers.push(this.slice(this.offset, end));\r\n\t\t\tthis.offset = end;\r\n\t\t}\r\n\t}\r\n\r\n\tcloseParenSpan(start: number) {\r\n\t\tlet stackPosition = -1;\r\n\t\tfor (let i = this.stack.length - 1; i >= 0; i--) {\r\n\t\t\tconst span = this.stack[i];\r\n\t\t\tif (span[0] === '(') {\r\n\t\t\t\tstackPosition = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (span[0] !== 'spoiler') break;\r\n\t\t}\r\n\t\tif (stackPosition === -1) return false;\r\n\r\n\t\tthis.pushSlice(start);\r\n\t\twhile (this.stack.length > stackPosition) this.popSpan(start);\r\n\t\tthis.offset = start;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Attempt to close a span.\r\n\t */\r\n\tcloseSpan(spanType: SpanType, start: number, end: number) {\r\n\t\t// loop backwards\r\n\t\tlet stackPosition = -1;\r\n\t\tfor (let i = this.stack.length - 1; i >= 0; i--) {\r\n\t\t\tconst span = this.stack[i];\r\n\t\t\tif (span[0] === spanType) {\r\n\t\t\t\tstackPosition = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (stackPosition === -1) return false;\r\n\r\n\t\tthis.pushSlice(start);\r\n\t\twhile (this.stack.length > stackPosition + 1) this.popSpan(start);\r\n\t\tconst span = this.stack.pop()!;\r\n\t\tconst startIndex = span[1];\r\n\t\tlet tagName = '';\r\n\t\tlet attrs = '';\r\n\t\tswitch (spanType) {\r\n\t\tcase '_': tagName = 'i'; break;\r\n\t\tcase '*': tagName = 'b'; break;\r\n\t\tcase '~': tagName = 's'; break;\r\n\t\tcase '^': tagName = 'sup'; break;\r\n\t\tcase '\\\\': tagName = 'sub'; break;\r\n\t\tcase '|': tagName = 'span'; attrs = ' class=\"spoiler\"'; break;\r\n\t\t}\r\n\t\tif (tagName) {\r\n\t\t\tthis.buffers[startIndex] = `<${tagName}${attrs}>`;\r\n\t\t\tthis.buffers.push(`</${tagName}>`);\r\n\t\t\tthis.offset = end;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Ends a span without an ending symbol. For most spans, this means\r\n\t * they don't take effect, but certain spans like spoiler tags don't\r\n\t * require ending symbols.\r\n\t */\r\n\tpopSpan(end: number) {\r\n\t\tconst span = this.stack.pop();\r\n\t\tif (!span) return false;\r\n\t\tthis.pushSlice(end);\r\n\t\tswitch (span[0]) {\r\n\t\tcase 'spoiler':\r\n\t\t\tthis.buffers.push(`</span>`);\r\n\t\t\tthis.buffers[span[1]] = `<span class=\"spoiler\">`;\r\n\t\t\tbreak;\r\n\t\tcase '>':\r\n\t\t\tthis.buffers.push(`</span>`);\r\n\t\t\tthis.buffers[span[1]] = `<span class=\"greentext\">`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\t// do nothing\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpopAllSpans(end: number) {\r\n\t\twhile (this.stack.length) this.popSpan(end);\r\n\t\tthis.pushSlice(end);\r\n\t}\r\n\r\n\ttoUriComponent(html: string) {\r\n\t\tconst component = html.replace(/&lt;/g, '<')\r\n\t\t\t.replace(/&gt;/g, '>')\r\n\t\t\t.replace(/&quot;/g, '\"')\r\n\t\t\t.replace(/&apos;/g, '\\'')\r\n\t\t\t.replace(/&amp;/g, '&');\r\n\t\treturn encodeURIComponent(component);\r\n\t}\r\n\r\n\trunLookahead(spanType: SpanType, start: number) {\r\n\t\tswitch (spanType) {\r\n\t\tcase '`':\r\n\t\t\t{\r\n\t\t\t\tlet delimLength = 0;\r\n\t\t\t\tlet i = start;\r\n\t\t\t\twhile (this.at(i) === '`') {\r\n\t\t\t\t\tdelimLength++;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tlet curDelimLength = 0;\r\n\t\t\t\twhile (i < this.str.length) {\r\n\t\t\t\t\tconst char = this.at(i);\r\n\t\t\t\t\tif (char === '\\n') break;\r\n\t\t\t\t\tif (char === '`') {\r\n\t\t\t\t\t\tcurDelimLength++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (curDelimLength === delimLength) break;\r\n\t\t\t\t\t\tcurDelimLength = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (curDelimLength !== delimLength) return false;\r\n\t\t\t\t// matching delims found\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tthis.buffers.push(`<code>`);\r\n\t\t\t\tlet innerStart = start + delimLength;\r\n\t\t\t\tlet innerEnd = i - delimLength;\r\n\t\t\t\tif (innerStart + 1 >= innerEnd) {\r\n\t\t\t\t\t// no special whitespace handling\r\n\t\t\t\t} else if (this.at(innerStart) === ' ' && this.at(innerEnd - 1) === ' ') {\r\n\t\t\t\t\tinnerStart++; // strip starting and ending space\r\n\t\t\t\t\tinnerEnd--;\r\n\t\t\t\t} else if (this.at(innerStart) === ' ' && this.at(innerStart + 1) === '`') {\r\n\t\t\t\t\tinnerStart++; // strip starting space\r\n\t\t\t\t} else if (this.at(innerEnd - 1) === ' ' && this.at(innerEnd - 2) === '`') {\r\n\t\t\t\t\tinnerEnd--; // strip ending space\r\n\t\t\t\t}\r\n\t\t\t\tthis.buffers.push(this.slice(innerStart, innerEnd));\r\n\t\t\t\tthis.buffers.push(`</code>`);\r\n\t\t\t\tthis.offset = i;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase '[':\r\n\t\t\t{\r\n\t\t\t\tif (this.slice(start, start + 2) !== '[[') return false;\r\n\t\t\t\tlet i = start + 2;\r\n\t\t\t\tlet colonPos = -1; // `:`\r\n\t\t\t\tlet anglePos = -1; // `<`\r\n\t\t\t\twhile (i < this.str.length) {\r\n\t\t\t\t\tconst char = this.at(i);\r\n\t\t\t\t\tif (char === ']' || char === '\\n') break;\r\n\t\t\t\t\tif (char === ':' && colonPos < 0) colonPos = i;\r\n\t\t\t\t\tif (char === '&' && this.slice(i, i + 4) === '&lt;') anglePos = i;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.slice(i, i + 2) !== ']]') return false;\r\n\t\t\t\tlet termEnd = i;\r\n\t\t\t\tlet uri = '';\r\n\t\t\t\tif (anglePos >= 0 && this.slice(i - 4, i) === '&gt;') { // `>`\r\n\t\t\t\t\turi = this.slice(anglePos + 4, i - 4);\r\n\t\t\t\t\ttermEnd = anglePos;\r\n\t\t\t\t\tif (this.at(termEnd - 1) === ' ') termEnd--;\r\n\t\t\t\t\turi = encodeURI(uri.replace(/^([a-z]*[^a-z:])/g, 'http://$1'));\r\n\t\t\t\t}\r\n\t\t\t\tlet term = this.slice(start + 2, termEnd).replace(/<\\/?a(?: [^>]+)?>/g, '');\r\n\t\t\t\tif (uri && !this.isTrusted) {\r\n\t\t\t\t\tconst shortUri = uri.replace(/^https?:\\/\\//, '').replace(/^www\\./, '').replace(/\\/$/, '');\r\n\t\t\t\t\tterm += `<small> &lt;${shortUri}&gt;</small>`;\r\n\t\t\t\t\turi += '\" rel=\"noopener';\r\n\t\t\t\t}\r\n\t\t\t\tif (colonPos > 0) {\r\n\t\t\t\t\tconst key = this.slice(start + 2, colonPos).toLowerCase();\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\tcase 'w':\r\n\t\t\t\t\tcase 'wiki':\r\n\t\t\t\t\t\tterm = term.slice(term.charAt(key.length + 1) === ' ' ? key.length + 2 : key.length + 1);\r\n\t\t\t\t\t\turi = `//en.wikipedia.org/w/index.php?title=Special:Search&search=${this.toUriComponent(term)}`;\r\n\t\t\t\t\t\tterm = `wiki: ${term}`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pokemon':\r\n\t\t\t\t\tcase 'item':\r\n\t\t\t\t\tcase 'type':\r\n\t\t\t\t\tcase 'category':\r\n\t\t\t\t\t\tterm = term.slice(term.charAt(key.length + 1) === ' ' ? key.length + 2 : key.length + 1);\r\n\r\n\t\t\t\t\t\tlet display = '';\r\n\t\t\t\t\t\tif (this.isTrusted) {\r\n\t\t\t\t\t\t\tdisplay = `<psicon ${key}=\"${term}\" />`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdisplay = `[${term}]`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dir = key;\r\n\t\t\t\t\t\tif (key === 'item') dir += 's';\r\n\t\t\t\t\t\tif (key === 'category') dir = 'categories' as 'category';\r\n\r\n\t\t\t\t\t\turi = `//dex.pokemonshowdown.com/${dir}/${toID(term)}`;\r\n\t\t\t\t\t\tterm = display;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!uri) {\r\n\t\t\t\t\turi = `//www.google.com/search?ie=UTF-8&btnI&q=${this.toUriComponent(term)}`;\r\n\t\t\t\t}\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tthis.buffers.push(`<a href=\"${uri}\" target=\"_blank\">${term}</a>`);\r\n\t\t\t\tthis.offset = i + 2;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase '<':\r\n\t\t\t{\r\n\t\t\t\tif (this.slice(start, start + 8) !== '&lt;&lt;') return false; // <<\r\n\t\t\t\tlet i = start + 8;\r\n\t\t\t\twhile (/[a-z0-9-]/.test(this.at(i))) i++;\r\n\t\t\t\tif (this.slice(i, i + 8) !== '&gt;&gt;') return false; // >>\r\n\t\t\t\tthis.pushSlice(start);\r\n\t\t\t\tconst roomid = this.slice(start + 8, i);\r\n\t\t\t\tthis.buffers.push(`&laquo;<a href=\"/${roomid}\" target=\"_blank\">${roomid}</a>&raquo;`);\r\n\t\t\t\tthis.offset = i + 8;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase 'a':\r\n\t\t\t{\r\n\t\t\t\tlet i = start + 1;\r\n\t\t\t\twhile (this.at(i) !== '/' || this.at(i + 1) !== 'a' || this.at(i + 2) !== '>') i++; // </a>\r\n\t\t\t\ti += 3;\r\n\t\t\t\tthis.pushSlice(i);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget() {\r\n\t\tlet beginningOfLine = this.offset;\r\n\t\t// main loop! i tracks our position\r\n\t\tfor (let i = beginningOfLine; i < this.str.length; i++) {\r\n\t\t\tconst char = this.at(i);\r\n\t\t\tswitch (char) {\r\n\t\t\tcase '_':\r\n\t\t\tcase '*':\r\n\t\t\tcase '~':\r\n\t\t\tcase '^':\r\n\t\t\tcase '\\\\':\r\n\t\t\tcase '|':\r\n\t\t\t\tif (this.at(i + 1) === char && this.at(i + 2) !== char) {\r\n\t\t\t\t\tif (!(this.at(i - 1) !== ' ' && this.closeSpan(char, i, i + 2))) {\r\n\t\t\t\t\t\tif (this.at(i + 2) !== ' ') this.pushSpan(char, i, i + 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === char) i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '(':\r\n\t\t\t\tthis.stack.push(['(', -1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ')':\r\n\t\t\t\tthis.closeParenSpan(i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '`':\r\n\t\t\t\tif (this.at(i + 1) === '`') this.runLookahead('`', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === '`') i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '[':\r\n\t\t\t\tthis.runLookahead('[', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.at(i + 1) === '[') i++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ':':\r\n\t\t\t\tif (i < 7) break;\r\n\t\t\t\tif (this.slice(i - 7, i + 1).toLowerCase() === 'spoiler:' ||\r\n\t\t\t\t\tthis.slice(i - 8, i + 1).toLowerCase() === 'spoilers:') {\r\n\t\t\t\t\tif (this.at(i + 1) === ' ') i++;\r\n\t\t\t\t\tthis.pushSpan('spoiler', i + 1, i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '&': // escaped '<' or '>'\r\n\t\t\t\tif (i === beginningOfLine && this.slice(i, i + 4) === '&gt;') {\r\n\t\t\t\t\tif (!\"._/=:;\".includes(this.at(i + 4)) && !['w&lt;', 'w&gt;'].includes(this.slice(i + 4, i + 9))) {\r\n\t\t\t\t\t\tthis.pushSpan('>', i, i);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runLookahead('<', i);\r\n\t\t\t\t}\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\twhile (this.slice(i + 1, i + 5) === 'lt;&') i += 4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<': // guaranteed to be <a\r\n\t\t\t\tthis.runLookahead('a', i);\r\n\t\t\t\tif (i < this.offset) {\r\n\t\t\t\t\ti = this.offset - 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t// should never happen\r\n\t\t\t\tbreak;\r\n\t\t\tcase '\\r':\r\n\t\t\tcase '\\n':\r\n\t\t\t\tthis.popAllSpans(i);\r\n\t\t\t\tif (this.replaceLinebreaks) {\r\n\t\t\t\t\tthis.buffers.push(`<br />`);\r\n\t\t\t\t\tthis.offset++;\r\n\t\t\t\t}\r\n\t\t\t\tbeginningOfLine = i + 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.popAllSpans(this.str.length);\r\n\t\treturn this.buffers.join('');\r\n\t}\r\n}\r\n\r\n/**\r\n * Takes a string and converts it to HTML by replacing standard chat formatting with the appropriate HTML tags.\r\n */\r\nexport function formatText(str: string, isTrusted = false, replaceLinebreaks = false) {\r\n\treturn new TextFormatter(str, isTrusted, replaceLinebreaks).get();\r\n}\r\n\r\n/**\r\n * Takes a string and strips all standard chat formatting except greentext from it, the text of a link is kept.\r\n */\r\nexport function stripFormatting(str: string) {\r\n\t// Doesn't match > meme arrows because the angle bracket appears in the chat still.\r\n\tstr = str.replace(/\\*\\*([^\\s*]+)\\*\\*|__([^\\s_]+)__|~~([^\\s~]+)~~|``([^\\s`]+)``|\\^\\^([^\\s^]+)\\^\\^|\\\\([^\\s\\\\]+)\\\\/g,\r\n\t\t(match, $1, $2, $3, $4, $5, $6) => $1 || $2 || $3 || $4 || $5 || $6);\r\n\t// Remove all of the link expect for the text in [[text<url>]]\r\n\treturn str.replace(/\\[\\[(?:([^<]*)\\s*<[^>]+>|([^\\]]+))\\]\\]/g, (match, $1, $2) => $1 || $2 || '');\r\n}\r\n"],"file":"chat-formatter.js"}